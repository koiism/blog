---
import '@/styles/style.scss';
import '@/styles/globals.css';
import { ViewTransitions } from 'astro:transitions';
import { Header } from './components/Header'

interface Props {
  title?: string;
}

const { title = 'Koiism' } = Astro.props;

---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <ViewTransitions />
  </head>
  <body>
    <div class="flex flex-col w-screen h-screen justify-between overflow-auto">
      <Header client:load />
      <div class="px-3 flex-1 flex items-center flex-col">
        <div class="max-w-[75%]">
          <slot />
        </div>
      </div>
    </div>
  </body>
</html>

<script>
import { useStore } from '@/services/store';
const isDark = useStore.getState().isDark;
document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

if (typeof localStorage !== 'undefined') {
  const observer = new MutationObserver(() => {
    const isDark = document.documentElement.classList.contains('dark');
    localStorage.setItem('theme', isDark ? 'dark' : 'light');
    useStore.setState({ isDark });
  });
  observer.observe(document.documentElement, {
    attributes: true,
    attributeFilter: ['class'],
  });
}
</script>
